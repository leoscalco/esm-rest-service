# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-10-03 12:48
from __future__ import unicode_literals

import annoying.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ComplexCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('condition', models.CharField(max_length=100)),
                ('next', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='empty', max_length=10)),
                ('statement', models.CharField(max_length=100)),
                ('orderPosition', models.IntegerField()),
                ('first', models.BooleanField(default=False)),
                ('next', models.CharField(default='1', max_length=50)),
                ('obligatory', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MediaPresentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='image', max_length=10)),
                ('mediaUrl', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='EmptyIntervention',
            fields=[
                ('intervention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='intervation_section.Intervention')),
            ],
            bases=('intervation_section.intervention',),
        ),
        migrations.CreateModel(
            name='MediaIntervention',
            fields=[
                ('intervention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='intervation_section.Intervention')),
                ('mediaType', models.CharField(default='image', max_length=10)),
            ],
            bases=('intervation_section.intervention',),
        ),
        migrations.CreateModel(
            name='QuestionIntervention',
            fields=[
                ('intervention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='intervation_section.Intervention')),
                ('questionType', models.IntegerField(choices=[(0, 'open_text'), (1, 'radio'), (2, 'checkbox'), (3, 'likert'), (4, 'semantic_differential')], default=0)),
                ('conditions', annoying.fields.JSONField(blank=True, null=True)),
                ('options', annoying.fields.JSONField(blank=True, null=True)),
                ('complexConditions', models.ManyToManyField(to='intervation_section.ComplexCondition')),
            ],
            bases=('intervation_section.intervention',),
        ),
        migrations.CreateModel(
            name='TaskIntervention',
            fields=[
                ('intervention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='intervation_section.Intervention')),
                ('appPackage', models.CharField(max_length=50)),
            ],
            bases=('intervation_section.intervention',),
        ),
        migrations.AddField(
            model_name='intervention',
            name='medias',
            field=models.ManyToManyField(to='intervation_section.MediaPresentation'),
        ),
    ]
